schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- stan(file = '/Users/pqian/Documents/Research/intuitive-editing/schools.stan', data = schools_dat)
print(fit)
plot(fit)
pairs(fit, pars = c("mu", "tau", "lp__"))
la <- extract(fit, permuted = TRUE) # return a list of arrays
mu <- la$mu
### return an array of three dimensions: iterations, chains, parameters
a <- extract(fit, permuted = FALSE)
### use S3 functions on stanfit objects
a2 <- as.array(fit)
m <- as.matrix(fit)
d <- as.data.frame(fit)
plot(fit)
traceplot(fit, pars = c("mu", "tau"), inc_warmup = TRUE, nrow = 2)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
plot([1,3.2,2,4])
plot(1,3.2,2,4)
plot((1,3.2,2,4))
plot((1,3.2,2,4))
plot((1,3.2,2,4));
plot(col(1,3.2,2,4))
plot(col(1,3.2))
library(brms)
require(lme4)
library(lmerTest)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- read.csv(file = '../data/exp1_df_mismatch_targeted_trials.csv')
data$is_N1_S <- ifelse(startsWith(data$trial_condition, 'S'), 1, -1)
data$is_attractor <- ifelse(startsWith(data$trial_condition, 'SP') | startsWith(data$trial_condition, 'PS'), 1, -1)
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$subj_error <- ifelse(data$e_type == 'subj', 1, 0)
# data$subj_error <- ifelse(startsWith(data$e_type, 'subj'), 1, 0)
exp1_data <- data
model1_lmer <- lmer(formula = "subj_error ~ is_N1_S + is_attractor + is_plural_attractor + (is_N1_S + is_attractor + is_plural_attractor || item) + (is_N1_S + is_attractor + is_plural_attractor || subject)",
data=exp1_data)
anova(model1_lmer)
data <- read.csv(file = '../data/exp2_df_mismatch_targeted_trials.csv')
data$is_N1_S <- ifelse(startsWith(data$trial_condition, 'S'), 1, -1)
data$is_attractor <- ifelse(startsWith(data$trial_condition, 'SP') | startsWith(data$trial_condition, 'PS'), 1, -1)
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$subj_error <- ifelse(data$e_type == 'subj', 1, 0)
# data$subj_error <- ifelse(startsWith(data$e_type, 'subj'), 1, 0)
exp2_data <- data
model2_lmer <- lmer(formula = "subj_error ~ is_N1_S + is_attractor + is_plural_attractor + (is_N1_S + is_attractor + is_plural_attractor || item) + (is_N1_S + is_attractor + is_plural_attractor || subject)",
data=exp2_data)
anova(model2_lmer)
library(brms)
require(lme4)
library(lmerTest)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- read.csv(file = '../data/exp1_df_mismatch_targeted_trials.csv')
data$is_N1_S <- ifelse(startsWith(data$trial_condition, 'S'), 1, -1)
data$is_attractor <- ifelse(startsWith(data$trial_condition, 'SP') | startsWith(data$trial_condition, 'PS'), 1, -1)
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$subj_error <- ifelse(data$e_type == 'subj', 1, 0)
# data$subj_error <- ifelse(startsWith(data$e_type, 'subj'), 1, 0)
exp1_data <- data
model1_lmer <- lmer(formula = "subj_error ~ is_N1_S + is_attractor + is_plural_attractor + (is_N1_S + is_attractor + is_plural_attractor || item) + (is_N1_S + is_attractor + is_plural_attractor || subject)",
data=exp1_data)
anova(model1_lmer)
data <- read.csv(file = '../data/exp2_df_mismatch_targeted_trials.csv')
data$is_N1_S <- ifelse(startsWith(data$trial_condition, 'S'), 1, -1)
data$is_attractor <- ifelse(startsWith(data$trial_condition, 'SP') | startsWith(data$trial_condition, 'PS'), 1, -1)
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$subj_error <- ifelse(data$e_type == 'subj', 1, 0)
# data$subj_error <- ifelse(startsWith(data$e_type, 'subj'), 1, 0)
exp2_data <- data
model2_lmer <- lmer(formula = "subj_error ~ is_N1_S + is_attractor + is_plural_attractor + (is_N1_S + is_attractor + is_plural_attractor || item) + (is_N1_S + is_attractor + is_plural_attractor || subject)",
data=exp2_data)
anova(model2_lmer)
library(brms)
require(lme4)
library(lmerTest)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#data <- read.csv(file = '../data/exp1_df_mismatch_targeted_trials.csv')
data <- read.csv(file = '../data/exp1_df_target_mismatch_resolving_trials.csv')
data$is_N1_S <- ifelse(startsWith(data$trial_condition, 'S'), 1, -1)
data$is_attractor <- ifelse(startsWith(data$trial_condition, 'SP') | startsWith(data$trial_condition, 'PS'), 1, -1)
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$subj_error <- ifelse(data$e_type == 'subj', 1, 0)
# data$subj_error <- ifelse(startsWith(data$e_type, 'subj'), 1, 0)
exp1_data <- data
model1_lmer <- lmer(formula = "subj_error ~ is_N1_S + is_attractor + is_plural_attractor + (is_N1_S + is_attractor + is_plural_attractor || item) + (is_N1_S + is_attractor + is_plural_attractor || subject)",
data=exp1_data)
anova(model1_lmer)
#data <- read.csv(file = '../data/exp2_df_mismatch_targeted_trials.csv')
data <- read.csv(file = '../data/exp2_df_target_mismatch_resolving_trials.csv')
data$is_N1_S <- ifelse(startsWith(data$trial_condition, 'S'), 1, -1)
data$is_attractor <- ifelse(startsWith(data$trial_condition, 'SP') | startsWith(data$trial_condition, 'PS'), 1, -1)
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$subj_error <- ifelse(data$e_type == 'subj', 1, 0)
# data$subj_error <- ifelse(startsWith(data$e_type, 'subj'), 1, 0)
exp2_data <- data
model2_lmer <- lmer(formula = "subj_error ~ is_N1_S + is_attractor + is_plural_attractor + (is_N1_S + is_attractor + is_plural_attractor || item) + (is_N1_S + is_attractor + is_plural_attractor || subject)",
data=exp2_data)
anova(model2_lmer)
#data <- read.csv(file = '../data/exp2_df_mismatch_targeted_trials.csv')
data <- read.csv(file = '../data/exp2_df_target_mismatch_resolving_trials.csv')
data$is_N1_S <- ifelse(startsWith(data$trial_condition, 'S'), 1, -1)
data$is_attractor <- ifelse(startsWith(data$trial_condition, 'SP') | startsWith(data$trial_condition, 'PS'), 1, -1)
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
# data$subj_error <- ifelse(data$e_type == 'subj', 1, 0)
data$subj_error <- ifelse(startsWith(data$e_type, 'subj'), 1, 0)
exp2_data <- data
model2_lmer <- lmer(formula = "subj_error ~ is_N1_S + is_attractor + is_plural_attractor + (is_N1_S + is_attractor + is_plural_attractor || item) + (is_N1_S + is_attractor + is_plural_attractor || subject)",
data=exp2_data)
anova(model2_lmer)
data <- read.csv(file = '../data/exp1_df_target_trials.csv')
# data$is_N1_S <- ifelse(startsWith(data$trial_condition, 'S'), 1, -1)
# data$is_attractor <- ifelse(startsWith(data$trial_condition, 'SP') | startsWith(data$trial_condition, 'PS'), 1, -1)
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$non_targeted_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
exp1_data <- data
model1_lmer <- lmer(formula = "non_targeted_correction ~ is_plural_attractor + (is_plural_attractor || item) + (is_plural_attractor || subject)",
data=exp1_data)
anova(model1_lmer)
paste('a', 'b')
paste('a', 'b', sep='')
print('a')
exp_names <- list("exp1", "exp2")
for (exp_name in exp_names){
print(exp_name)
data <- read.csv(file = paste('../data/', exp_name, '_df_target_trials.csv', sep=''))
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$non_targeted_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
exp_data <- data
model_lmer <- lmer(formula = "non_targeted_correction ~ is_plural_attractor + (is_plural_attractor || item) + (is_plural_attractor || subject)",
data=exp_data)
anova(model_lmer)
}
exp_names <- list("exp1", "exp2")
for (exp_name in exp_names){
print(exp_name)
data <- read.csv(file = paste('../data/', exp_name, '_df_target_trials.csv', sep=''))
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$non_targeted_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
exp_data <- data
model_lmer <- lmer(formula = "non_targeted_correction ~ is_plural_attractor + (is_plural_attractor || item) + (is_plural_attractor || subject)",
data=exp_data)
rs <- anova(model_lmer)
print(rs)
}
data
data$exp_name = 'exp2'
data
data1 <- read.csv(file = '../data/exp1_df_target_trials.csv')
data2 <- read.csv(file = '../data/exp2_df_target_trials.csv')
data1$is_optional_correction = -1
data2$is_optional_correction = 1
data <- rbind(data1, data2)
data$non_targeted_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
model_lmer <- lmer(formula = "non_targeted_correction ~ is_optional_correction + (is_optional_correction || item) + (is_plural_attractor || subject)",
data=data)
data1 <- read.csv(file = '../data/exp1_df_target_trials.csv')
data2 <- read.csv(file = '../data/exp2_df_target_trials.csv')
data1$is_optional_correction = -1
data2$is_optional_correction = 1
data <- rbind(data1, data2)
data$non_targeted_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
model_lmer <- lmer(formula = "non_targeted_correction ~ is_optional_correction + (is_optional_correction || item) + (is_optional_correction || subject)",
data=data)
rs <- anova(model_lmer)
print(rs)
data2
head(data2, 10)
data2$subject <- paste('exp2_', data2$subject)
head(data2, 10)
data1 <- read.csv(file = '../data/exp1_df_target_trials.csv')
data2 <- read.csv(file = '../data/exp2_df_target_trials.csv')
data1$subject <- paste('exp1_', data2$subject, sep='')
# Test whether exp2 increase the rate of non-targated corrections
data1 <- read.csv(file = '../data/exp1_df_target_trials.csv')
data2 <- read.csv(file = '../data/exp2_df_target_trials.csv')
data1$subject <- paste('exp1_', data1$subject, sep='')
data2$subject <- paste('exp2_', data2$subject, sep='')
data1$is_optional_correction = -1
data2$is_optional_correction = 1
data <- rbind(data1, data2)
data$non_targeted_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
model_lmer <- lmer(formula = "non_targeted_correction ~ is_optional_correction + (is_optional_correction || item) + (is_optional_correction || subject)",
data=data)
rs <- anova(model_lmer)
print(rs)
model_lmer <- lmer(formula = "non_targeted_correction ~ is_optional_correction + (is_optional_correction | item) + (is_optional_correction | subject) + (is_optional_correction | trial_condition)",
data=data)
rs <- anova(model_lmer)
print(rs)
# Test whether exp2 increase the rate of non-targated corrections
data1 <- read.csv(file = '../data/exp1_df_target_trials.csv')
data2 <- read.csv(file = '../data/exp2_df_target_trials.csv')
data1$subject <- paste('exp1_', data1$subject, sep='')
data2$subject <- paste('exp2_', data2$subject, sep='')
data1$is_optional_correction = -1
data2$is_optional_correction = 1
data <- rbind(data1, data2)
data$non_targeted_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
model_lmer <- lmer(formula = "non_targeted_correction ~ is_optional_correction + (is_optional_correction | item) + (is_optional_correction | subject) + (is_optional_correction | trial_condition)",
data=data)
rs <- anova(model_lmer)
print(rs)
exp_names <- list("exp1", "exp2")
for (exp_name in exp_names){
print(exp_name)
data <- read.csv(file = paste('../data/', exp_name, '_df_target_trials.csv', sep=''))
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$non_targeted_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
exp_data <- data
model_lmer <- lmer(formula = "non_targeted_correction ~ is_plural_attractor + (is_plural_attractor | item) + (is_plural_attractor | subject) + (is_plural_attractor | trial_condition)",
data=exp_data)
rs <- anova(model_lmer)
print(rs)
}
exp_names <- list("exp1", "exp2")
for (exp_name in exp_names){
print(exp_name)
data <- read.csv(file = paste('../data/', exp_name, '_df_target_trials.csv', sep=''))
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$non_targeted_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
exp_data <- data
model_lmer <- lmer(formula = "non_targeted_correction ~ is_plural_attractor + (is_plural_attractor || item) + (is_plural_attractor || subject) + (is_plural_attractor || trial_condition)",
data=exp_data)
rs <- anova(model_lmer)
print(rs)
}
# Test whether exp2 increase the rate of non-targated corrections
data1 <- read.csv(file = '../data/exp1_df_target_trials.csv')
data2 <- read.csv(file = '../data/exp2_df_target_trials.csv')
data1$subject <- paste('exp1_', data1$subject, sep='')
data2$subject <- paste('exp2_', data2$subject, sep='')
data1$is_optional_correction = -1
data2$is_optional_correction = 1
data <- rbind(data1, data2)
data$non_targeted_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
model_lmer <- lmer(formula = "non_targeted_correction ~ is_optional_correction + (is_optional_correction | item) + (is_optional_correction | subject) + (is_optional_correction | trial_condition)",
data=data)
rs <- anova(model_lmer)
print(rs)
data$non_targeted_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
model_lmer <- lmer(formula = "non_targeted_correction ~ is_optional_correction + (is_optional_correction | item) + (is_optional_correction | subject)",
data=data)
rs <- anova(model_lmer)
print(rs)
data1 <- read.csv(file = '../data/exp1_df_target_trials.csv')
data2 <- read.csv(file = '../data/exp2_df_target_trials.csv')
data1$subject <- paste('exp1_', data1$subject, sep='')
data2$subject <- paste('exp2_', data2$subject, sep='')
data1$is_optional_correction = -1
data2$is_optional_correction = 1
data <- rbind(data1, data2)
data$non_targeted_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
model_lmer <- lmer(formula = "non_targeted_correction ~ is_optional_correction + (is_optional_correction | item) + (is_optional_correction | subject)",
data=data)
rs <- anova(model_lmer)
print(rs)
print(model_lmer)
library(brms)
require(lme4)
library(lmerTest)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#data <- read.csv(file = '../data/exp1_df_mismatch_targeted_trials.csv')
data <- read.csv(file = '../data/exp1_df_target_mismatch_resolving_trials.csv')
data$is_N1_S <- ifelse(startsWith(data$trial_condition, 'S'), 1, -1)
data$is_attractor <- ifelse(startsWith(data$trial_condition, 'SP') | startsWith(data$trial_condition, 'PS'), 1, -1)
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$subj_error <- ifelse(data$e_type == 'subj', 1, 0)
# data$subj_error <- ifelse(startsWith(data$e_type, 'subj'), 1, 0)
exp1_data <- data
model1_lmer <- lmer(formula = "subj_error ~ is_N1_S + is_attractor + is_plural_attractor + (is_N1_S + is_attractor + is_plural_attractor || item) + (is_N1_S + is_attractor + is_plural_attractor || subject)",
data=exp1_data)
anova(model1_lmer)
#data <- read.csv(file = '../data/exp2_df_mismatch_targeted_trials.csv')
data <- read.csv(file = '../data/exp2_df_target_mismatch_resolving_trials.csv')
data$is_N1_S <- ifelse(startsWith(data$trial_condition, 'S'), 1, -1)
data$is_attractor <- ifelse(startsWith(data$trial_condition, 'SP') | startsWith(data$trial_condition, 'PS'), 1, -1)
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$subj_error <- ifelse(data$e_type == 'subj', 1, 0)
# data$subj_error <- ifelse(startsWith(data$e_type, 'subj'), 1, 0)
exp2_data <- data
model2_lmer <- lmer(formula = "subj_error ~ is_N1_S + is_attractor + is_plural_attractor + (is_N1_S + is_attractor + is_plural_attractor || item) + (is_N1_S + is_attractor + is_plural_attractor || subject)",
data=exp2_data)
anova(model2_lmer)
head(data)
#data <- read.csv(file = '../data/exp2_df_mismatch_targeted_trials.csv')
data <- read.csv(file = '../data/exp2_df_target_mismatch_resolving_trials.csv')
data$is_N1_S <- ifelse(startsWith(data$trial_condition, 'S'), 1, -1)
data$is_attractor <- ifelse(startsWith(data$trial_condition, 'SP') | startsWith(data$trial_condition, 'PS'), 1, -1)
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
# data$subj_error <- ifelse(data$e_type == 'subj', 1, 0)
data$subj_error <- ifelse(startsWith(data$e_type, 'subj'), 1, 0)
exp2_data <- data
model2_lmer <- lmer(formula = "subj_error ~ is_N1_S + is_attractor + is_plural_attractor + (is_N1_S + is_attractor + is_plural_attractor || item) + (is_N1_S + is_attractor + is_plural_attractor || subject)",
data=exp2_data)
anova(model2_lmer)
source("~/Documents/Research/intuitive-editing/rational-inference-from-agreement-mismatch/R_script/regression_analysis.R", echo=TRUE)
exp_names <- list("exp1", "exp2")
for (exp_name in exp_names){
print(exp_name)
data <- read.csv(file = paste('../data/', exp_name, '_df_target_trials.csv', sep=''))
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$non_targeted_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
exp_data <- data
model_lmer <- lmer(formula = "non_targeted_correction ~ is_plural_attractor + (is_plural_attractor | item) + (is_plural_attractor || subject)",
data=exp_data)
rs <- anova(model_lmer)
print(rs)
}
head(data)
# Test whether exp2 increase the rate of non-targated corrections
data1 <- read.csv(file = '../data/exp1_df_target_trials.csv')
data2 <- read.csv(file = '../data/exp2_df_target_trials.csv')
data1$subject <- paste('exp1_', data1$subject, sep='')
data2$subject <- paste('exp2_', data2$subject, sep='')
data1$is_optional_correction = -1
data2$is_optional_correction = 1
data <- rbind(data1, data2)
data$non_targeted_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
model_lmer <- lmer(formula = "non_targeted_correction ~ is_optional_correction + (is_optional_correction | item) + (is_optional_correction | subject)",
data=data)
rs <- anova(model_lmer)
print(rs)
data
data1 <- read.csv(file = '../data/exp1_df_target_trials.csv')
data2 <- read.csv(file = '../data/exp2_df_target_trials.csv')
data1$subject <- paste('exp1_', data1$subject, sep='')
data2$subject <- paste('exp2_', data2$subject, sep='')
data1$is_optional_correction = -1
data2$is_optional_correction = 1
data <- rbind(data1, data2)
data$non_mismatch_resolving_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
model_lmer <- lmer(formula = "non_mismatch_resolving_correction ~ is_optional_correction + (is_optional_correction | item) + (is_optional_correction | subject)",
data=data)
rs <- anova(model_lmer)
print(rs)
model_lmer <- lmer(formula = "non_mismatch_resolving_correction ~ is_optional_correction + (is_optional_correction | item) + (is_optional_correction | subject) + (is_optional_correction | trial_condition)",
data=data)
rs <- anova(model_lmer)
print(rs)
model_lmer <- lmer(formula = "non_mismatch_resolving_correction ~ is_optional_correction*trial_condition + (is_optional_correction*trial_condition | item) + (is_optional_correction*trial_condition | subject)",
data=data)
model_lmer <- lmer(formula = "non_mismatch_resolving_correction ~ is_optional_correction*trial_condition + (is_optional_correction+trial_condition | item) + (is_optional_correction+trial_condition | subject)",
data=data)
model_lmer <- lmer(formula = "non_mismatch_resolving_correction ~ is_optional_correction*trial_condition + (is_optional_correction+trial_condition | item) + (is_optional_correction+trial_condition | subject)",
data=data)
model_lmer <- lmer(formula = "non_mismatch_resolving_correction ~ is_optional_correction*trial_condition + (is_optional_correction+trial_condition || item) + (is_optional_correction+trial_condition || subject)",
data=data)
model_lmer <- lmer(formula = "non_mismatch_resolving_correction ~ is_optional_correction*trial_condition + (1 | item) + (1 | subject)",
data=data)
print(model_lmer)
rs <- anova(model_lmer)
print(rs)
model_lmer <- lmer(formula = "non_mismatch_resolving_correction ~ is_optional_correction*trial_condition + (1 + is_optional_correction*trial_condition | item) + (1 + is_optional_correction*trial_condition | subject)",
data=data)
model_lmer <- lmer(formula = "non_mismatch_resolving_correction ~ is_optional_correction*trial_condition + (1 + trial_condition | item) + (1 + trial_condition | subject)",
data=data)
model_lmer <- lmer(formula = "non_mismatch_resolving_correction ~ is_optional_correction*trial_condition + (1 + is_optional_correction| item) + (1 + trial_condition | subject)",
data=data)
model_lmer <- lmer(formula = "non_mismatch_resolving_correction ~ is_optional_correction*trial_condition + (1 +  trial_condition + is_optional_correction| item) + (1 + trial_condition + is_optional_correction | subject)",
data=data)
rs <- anova(model_lmer)
print(rs)
model_lmer <- lmer(formula = "non_mismatch_resolving_correction ~ is_optional_correction*trial_condition + (1 + trial_condition + is_optional_correction | item) + (1 + trial_condition + is_optional_correction | subject)",
data=data)
rs <- anova(model_lmer)
print(rs)
model <- brms::brm(formula = "non_mismatch_resolving_correction ~ is_optional_correction*trial_condition + (1 + trial_condition + is_optional_correction | item) + (1 + trial_condition + is_optional_correction | subject)",
data=data, family='bernoulli', iter=10000, cores=4, chains=4)
print(model)
exp_names <- list("exp1", "exp2")
for (exp_name in exp_names){
print(exp_name)
# data <- read.csv(file = '../data/exp1_df_target_mismatch_resolving_trials.csv')
data <- read.csv(file = paste('../data/', exp_name, '_df_target_mismatch_resolving_trials.csv', sep=''))
data$is_N1_S <- ifelse(startsWith(data$trial_condition, 'S'), 1, -1)
data$is_attractor <- ifelse(startsWith(data$trial_condition, 'SP') | startsWith(data$trial_condition, 'PS'), 1, -1)
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$subj_error <- ifelse(data$e_type == 'subj', 1, 0)
# data$subj_error <- ifelse(startsWith(data$e_type, 'subj'), 1, 0)
model_lmer <- lmer(formula = "subj_error ~ is_N1_S + is_attractor + is_plural_attractor + (is_N1_S + is_attractor + is_plural_attractor || item) + (is_N1_S + is_attractor + is_plural_attractor || subject)",
data=data)
rs <- anova(model_lmer)
print(rs)
}
exp_names <- list("exp1", "exp2")
for (exp_name in exp_names){
print(exp_name)
data <- read.csv(file = paste('../data/', exp_name, '_df_target_mismatch_resolving_trials.csv', sep=''))
data$is_N1_S <- ifelse(startsWith(data$trial_condition, 'S'), 1, -1)
data$is_attractor <- ifelse(startsWith(data$trial_condition, 'SP') | startsWith(data$trial_condition, 'PS'), 1, -1)
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$subj_error <- ifelse(data$e_type == 'subj', 1, 0)
# data$subj_error <- ifelse(startsWith(data$e_type, 'subj'), 1, 0)
model_lmer <- lmer(formula = "subj_error ~ is_N1_S + is_attractor + is_plural_attractor + (is_N1_S + is_attractor + is_plural_attractor | item) + (is_N1_S + is_attractor + is_plural_attractor | subject)",
data=data)
rs <- anova(model_lmer)
print(rs)
}
library(brms)
require(lme4)
library(lmerTest)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
exp_names <- list("exp1", "exp2")
for (exp_name in exp_names){
print(exp_name)
data <- read.csv(file = paste('../data/', exp_name, '_df_target_mismatch_resolving_trials.csv', sep=''))
data$is_N1_S <- ifelse(startsWith(data$trial_condition, 'S'), 1, -1)
data$is_attractor <- ifelse(startsWith(data$trial_condition, 'SP') | startsWith(data$trial_condition, 'PS'), 1, -1)
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$subj_error <- ifelse(data$e_type == 'subj', 1, 0)
# data$subj_error <- ifelse(startsWith(data$e_type, 'subj'), 1, 0)
model_lmer <- lmer(formula = "subj_error ~ is_N1_S + is_attractor + is_plural_attractor + (is_N1_S + is_attractor + is_plural_attractor | item) + (is_N1_S + is_attractor + is_plural_attractor | subject)",
data=data)
rs <- anova(model_lmer)
print(rs)
}
# model1 <- brms::brm(formula = "subj_error ~ is_N1_S + is_attractor + is_plural_attractor + (is_N1_S + is_attractor + is_plural_attractor || item) + (is_N1_S + is_attractor + is_plural_attractor || subject)",
#                     data=exp1_data, family='bernoulli', iter=10000, cores=4, chains=4)
#
#
# model2 <- brms::brm(formula = "subj_error ~ is_N1_S + is_attractor + is_plural_attractor + (is_N1_S + is_attractor + is_plural_attractor || item) + (is_N1_S + is_attractor + is_plural_attractor || subject)",
#                     data=exp2_data, family='bernoulli', iter=10000, cores=4, chains=4)
# Test whether SPP has higher rate of non-mismatch-resolving responses
exp_names <- list("exp1", "exp2")
for (exp_name in exp_names){
print(exp_name)
data <- read.csv(file = paste('../data/', exp_name, '_df_target_trials.csv', sep=''))
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$non_mismatch_resolving_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
exp_data <- data
model_lmer <- lmer(formula = "non_mismatch_resolving_correction ~ is_plural_attractor + (is_plural_attractor | item) + (is_plural_attractor | subject)",
data=exp_data)
rs <- anova(model_lmer)
print(rs)
}
# Test whether making the correction optional in exp2 increases
# the rate of non-mismatch-resolving responses
data1 <- read.csv(file = '../data/exp1_df_target_trials.csv')
data2 <- read.csv(file = '../data/exp2_df_target_trials.csv')
data1$subject <- paste('exp1_', data1$subject, sep='')
data2$subject <- paste('exp2_', data2$subject, sep='')
data1$is_optional_correction = -1
data2$is_optional_correction = 1
data <- rbind(data1, data2)
# data$non_mismatch_resolving_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
# model_lmer <- lmer(formula = "non_mismatch_resolving_correction ~ is_optional_correction + (is_optional_correction | item) + (is_optional_correction | subject)",
#                    data=data)
# rs <- anova(model_lmer)
# print(rs)
model_lmer <- lmer(formula = "non_mismatch_resolving_correction ~ is_optional_correction*trial_condition + (1 + trial_condition + is_optional_correction | item) + (1 + trial_condition + is_optional_correction | subject)",
data=data)
library(brms)
require(lme4)
library(lmerTest)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
exp_names <- list("exp1", "exp2")
for (exp_name in exp_names){
print(exp_name)
data <- read.csv(file = paste('../data/', exp_name, '_df_target_mismatch_resolving_trials.csv', sep=''))
data$is_N1_S <- ifelse(startsWith(data$trial_condition, 'S'), 1, -1)
data$is_attractor <- ifelse(startsWith(data$trial_condition, 'SP') | startsWith(data$trial_condition, 'PS'), 1, -1)
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$subj_error <- ifelse(data$e_type == 'subj', 1, 0)
# data$subj_error <- ifelse(startsWith(data$e_type, 'subj'), 1, 0)
model_lmer <- lmer(formula = "subj_error ~ is_N1_S + is_attractor + is_plural_attractor + (is_N1_S + is_attractor + is_plural_attractor | item) + (is_N1_S + is_attractor + is_plural_attractor | subject)",
data=data)
rs <- anova(model_lmer)
print(rs)
}
# model1 <- brms::brm(formula = "subj_error ~ is_N1_S + is_attractor + is_plural_attractor + (is_N1_S + is_attractor + is_plural_attractor || item) + (is_N1_S + is_attractor + is_plural_attractor || subject)",
#                     data=exp1_data, family='bernoulli', iter=10000, cores=4, chains=4)
#
#
# model2 <- brms::brm(formula = "subj_error ~ is_N1_S + is_attractor + is_plural_attractor + (is_N1_S + is_attractor + is_plural_attractor || item) + (is_N1_S + is_attractor + is_plural_attractor || subject)",
#                     data=exp2_data, family='bernoulli', iter=10000, cores=4, chains=4)
# Test whether SPP has higher rate of non-mismatch-resolving responses
exp_names <- list("exp1", "exp2")
for (exp_name in exp_names){
print(exp_name)
data <- read.csv(file = paste('../data/', exp_name, '_df_target_trials.csv', sep=''))
data$is_plural_attractor <- ifelse(startsWith(data$trial_condition, 'SPP'), 1, -1)
data$non_mismatch_resolving_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
exp_data <- data
model_lmer <- lmer(formula = "non_mismatch_resolving_correction ~ is_plural_attractor + (is_plural_attractor | item) + (is_plural_attractor | subject)",
data=exp_data)
rs <- anova(model_lmer)
print(rs)
}
# Test whether making the correction optional in exp2 increases
# the rate of non-mismatch-resolving responses
data1 <- read.csv(file = '../data/exp1_df_target_trials.csv')
data2 <- read.csv(file = '../data/exp2_df_target_trials.csv')
data1$subject <- paste('exp1_', data1$subject, sep='')
data2$subject <- paste('exp2_', data2$subject, sep='')
data1$is_optional_correction = -1
data2$is_optional_correction = 1
data <- rbind(data1, data2)
data$non_mismatch_resolving_correction <- ifelse(data$e_type == 'subj' | data$e_type == 'verb' | data$e_type == 'subj+local' | data$e_type == 'verb+local', 0, 1)
# model_lmer <- lmer(formula = "non_mismatch_resolving_correction ~ is_optional_correction + (is_optional_correction | item) + (is_optional_correction | subject)",
#                    data=data)
# rs <- anova(model_lmer)
# print(rs)
model_lmer <- lmer(formula = "non_mismatch_resolving_correction ~ is_optional_correction*trial_condition + (1 + trial_condition + is_optional_correction | item) + (1 + trial_condition + is_optional_correction | subject)",
data=data)
rs <- anova(model_lmer)
print(rs)
print("Test whether making the correction optional in Study II increases the rate of non-mismatch-resolving responses:")
print("Test whether making the correction optional in Study II increases the rate of non-mismatch-resolving responses compared to Study I:")
